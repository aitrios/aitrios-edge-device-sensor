name: Main

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}@main-${{ github.ref }}
  cancel-in-progress: true

jobs:

  infos:
    name: Infos
    runs-on: ubuntu-22.04
    outputs:
      package-namespace: ${{ steps.infos.outputs.namespace }}
    steps:
      - name: Some infos
        id: infos
        run: |
          echo github.run_id is ${{ github.run_id }}
          echo github.ref is ${{ github.ref }}
          echo github.head_ref is ${{ github.head_ref }}
          echo github.ref_name is ${{ github.ref_name }}
          echo github.sha is ${{ github.sha }}
          echo github.event_name is ${{ github.event_name }}
          echo github.event.pull_request.user.login is ${{ github.event.pull_request.user.login }}
          echo github.event.action is ${{ github.event.action }}
          echo github.event.repository_owner is ${{ github.repository_owner }}
          NAMESPACE=${{ github.repository || github.event.repository }}
          NAMESPACE_LC=${NAMESPACE,,}
          echo "namespace=${NAMESPACE_LC}" >> $GITHUB_OUTPUT
          echo namespace is ${NAMESPACE_LC}

  filter:
    runs-on: ubuntu-latest
    needs:
      - infos
    outputs:
      should_build_rpi: ${{ steps.platform_filter.outputs.should_build_rpi }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.project_ref }}
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            src_common:
              - '.devcontainer/**'
              - '.github/**'
              - 'src/**'
              - 'subprojects-custom/wasm_v1_3_1/**'
              - 'test/**'
              - 'meson.build'
              - 'meson_options.txt'
              - 'subprojects/packagefiles/**'
              - 'subprojects/gtest.wrap'
              - 'subprojects/senscord.wrap'
              - 'subprojects/unity.wrap'
              - 'subprojects/wasm-micro-runtime*.wrap'
            docs:
              - 'docs/**'
              - '*.md'
            rpi_only:
              - 'subprojects/senscord-rpicam-imx500.wrap'
              - 'subprojects-custom/senscord/**'
              - 'subprojects-custom/senscord-rpicam-imx500/**'
              - 'script/install-senscord-rpicam-imx500.sh'
              - 'script/mk-deb.sh'

      - name: Determine platform builds
        id: platform_filter
        run: |
          SHOULD_BUILD_RPI="false"

          # tag
          if [[ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]]; then
            SHOULD_BUILD_RPI="true"
            echo "Tag pushed - building both platforms"
          # src_common
          elif [[ "${{ steps.filter.outputs.src_common }}" == "true" ]]; then
            SHOULD_BUILD_RPI="true"
            echo "Source code changes detected - building both platforms"
          # rpi_only
          elif [[ "${{ steps.filter.outputs.rpi_only }}" == "true" ]]; then
            SHOULD_BUILD_RPI="true"
            echo "Only RPi wrap file changed - building RPi only"
          else
            echo "No relevant changes detected - skipping builds"
          fi

          echo "should_build_rpi=${SHOULD_BUILD_RPI}" >> $GITHUB_OUTPUT

          echo "Final decision: RPi build: ${SHOULD_BUILD_RPI}"

  build_rpi:
    name: Build Rpi
    needs:
      - filter
    if: ${{ needs.filter.outputs.should_build_rpi == 'true' }}
    uses: ./.github/workflows/build-rpi.yml
    secrets: inherit
    with:
      namespace: ${{ needs.infos.outputs.package-namespace }}
      project_ref: ''
      subproject_sha: ''
      artifact_name: senscord-edc-rpi-deb-${{ github.run_id }}

  checkpoint_success:
    if: ${{ always() }}
    runs-on: ubuntu-22.04
    needs:
      - build_rpi
    steps:
      - name: Check all previous jobs finished correctly
        run: |
          SUCCESS=true

          if [[ "${{ needs.filter.outputs.should_build_rpi }}" == "true" ]]; then
            if [[ "${{ needs.build_rpi.result }}" != "success" ]]; then
              echo "RPi build failed"
              SUCCESS=false
            else
              echo "RPi build succeeded"
            fi
          else
            echo "RPi build not required"
          fi

          if [[ "$SUCCESS" == "true" ]]; then
            echo "All required checks passed. This PR can be merged"
          else
            echo "Required checks failed. This PR cannot be merged"
            exit 1
          fi

  release_on_tag:
    if: >-
      needs.checkpoint_success.result == 'success' &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/')

    needs:
      - checkpoint_success

    runs-on: ubuntu-24.04

    steps:
      - name: Download Rpi build artifact
        uses: actions/download-artifact@v4
        with:
          name: senscord-edc-rpi-deb-${{ github.run_id }}
          path: artifacts

      - name: List artifacts directory
        run: ls -l artifacts

      - name: Create draft GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: true
          files: artifacts/*
